CREATE TABLE IF NOT EXISTS users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(50),
    name VARCHAR(30),
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_email UNIQUE (email),
    CONSTRAINT uq_name UNIQUE (name)
);
CREATE TABLE IF NOT EXISTS categories
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50),
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT unique_name UNIQUE (name)
);
CREATE TABLE IF NOT EXISTS events
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(400),
    category_id BIGINT REFERENCES categories(id),
    confirmed_requests INTEGER,
    creation_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(5000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT REFERENCES users(id),
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state VARCHAR(15),
    title VARCHAR(150),
    views BIGINT,
    longitude REAL,
    latitude REAL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT above_zero_limit CHECK (participant_limit >= 0),
    CONSTRAINT conf_check CHECK (confirmed_requests <= events.participant_limit)
);
CREATE TABLE IF NOT EXISTS participation
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id BIGINT REFERENCES events(id),
    requester_id BIGINT REFERENCES users(id),
    status VARCHAR(15),
    CONSTRAINT pk_participation PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS compilation
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(150),
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS event_compilation
(
    event_id BIGINT REFERENCES events(id),
    compilation_id BIGINT REFERENCES compilation(id)
);
CREATE TABLE IF NOT EXISTS specific_location
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50),
    longitude REAL,
    latitude REAL,
    radius INTEGER,
    CONSTRAINT pk_location PRIMARY KEY (id),
    CONSTRAINT un_name UNIQUE (name)
);
CREATE TABLE IF NOT EXISTS event_location
(
    event_id BIGINT REFERENCES events(id),
    location_id BIGINT REFERENCES specific_location(id)
);